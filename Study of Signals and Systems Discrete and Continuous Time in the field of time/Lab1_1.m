%201500127 Dimitris Oreinos Task 1


t=[-20:0.01:20];
% Αρχικά ορίζουμε το συνεχές σήμα f(t)=sin(t/2) και το διακριτό σήμαf[n]=sin(n/2)

n1=[-20:20];

n2=[-20:20];


f1=sin(t/2);


f2=sin(n1/2);

figure  

subplot(3,1,1)
 

 
plot(t,f1,'r')%Σχεδιάζουμε αρχικά το σήμα f(t)

grid 

ylabel('f(t)'), xlabel('t'), legend('f(t)'), title('f(t)')


subplot(3,1,2)




stem(n1,f2,'dg')%Σχεδιάζουμε το σήμα f[n],χρησιμοποιώντας την εντολή stem(x,y),
%όπου σχεδιάζονται δικαριτά σήματα ενώ προηγουμένως με την εντολή plot(x,y),
%σχεδιάζονται συνεχή σήματα.

grid



ylabel('f[n]'), xlabel('n'), legend('f[n]'), title('f[n]')


g=sin(2*n2);% Ορίζουμε το διακριτό σήμα g[n]=sin(2*n)


subplot(3,1,3)

stem(n2,g,'db')%Σχεδιάζουμε στο τρίτο παράθυρο το σήμα g[n],χρησιμοποιώντας την εντολή stem(x,y)
%Συγκρίνοντας τα διαγράμματα των σημάτων f[n] και g[n], παρατηρούμε ότι συσχετίζονται
%μεταξύ τους με δύο τρόπους σκέψης, βαζιζόμενοι στην ιδιότητα των σημάτων, για τη κλιμάκωση στο χρόνο:

%α)Το σήμα g[n] ,παρατηρούμε ότιισχύει πώς 2*n=4*(n/2),άρα sin(2*n)=sin(4*(n/2)).Αυτό σημαίνει πως ο παράγοντας 
%κλιμακώσεως στο χρόνο a, θα είναι a=4>1.’ρα μπορούμε να πόυμε ότι το σήμα g[n] 
%είναι μία συμπιεσμένη εκδοχή  του σήματος f[n] στο χρόνο n.
%Αυτό συνεπάγεται ότι αν χρησιμοποιήσουμε την εντολή downsample(f2,4), τότε θα προκύψει
%μια υποδειγματοληπτημένη εκδοχή του σήματος f[n]=sin(n/2), g[n]=sin(2*n).
%(Επίσης θα μπορούσαμε να  πολλαπλασιάσουμε το χρόνο
%n1 στην εντολή stem(n1,f2) ,με τον αριθμό 1/4 (stem((1/4)*n1,f2), αλλά
%συνήθως χρησιμοποιούμε την εντολή downsample(f2,4)).

%βΤο σήμα f[n] ,παρατηρούμε ότιισχύει πώς n/2=(2*n)/4,άρα sin(n/2)=sin((2*n)/4).Αυτό σημαίνει πως ο παράγοντας 
%κλιμακώσεως στο χρόνο a, θα είναι a=1/4<1.’ρα μπορούμε να πόυμε ότι το σήμα g[n] 
%είναι μία συμπιεσμένη εκδοχή  του σήματος f[n] στο χρόνο n.
%Αυτό συνεπάγεται ότι αν πολλαπλασιάσω το χρόνο n2 στην εντολή stem(n2,g) ,με τον αριθμό 4 (stem(4*n2,g) ή
%καλύτερα αν χρησιμοποιήσουμε την εντολή upsample(g,4), τότε θα προκύψει
%μια υπερδειγματοληπτημένη εκδοχή του σήματος g[n]=sin(2*n), f[n]=sin(n/2).
%(Επίσης θα μπορούσαμε να  πολλαπλασιάσουμε το χρόνο
%n2 στην εντολή stem(n1,g) ,με τον αριθμό 1/4 (stem((1/4)*n2,g), αλλά
%συνήθως χρησιμοποιούμε την εντολή upsample(g,4)).


grid

ylabel('g[n]'), xlabel('n'), legend('g[n]'), title('g[n]')


figure

subplot(2,1,1)



plot (-t,f1,'dy')%Σχεδιάζουμε το σήμα f(-t),που είναι σε σχέση με το αρχικό σήμα f(t)
%,ανεστραμμένο ως προς το χρόνο, που το σχεδιάζουμε βάζοντας t αντί για -t.  
grid

legend ('f(-t)'), xlabel('t'), legend('f(-t)'), title('f(-t)')



subplot (2,1,2)


plot (t-2,f1,'dg')%Στο πρώτο παράθυρο σχεδίασης σχεδιάζουμε το σήμα f(t-2),που είναι σε σχέση με το 
%αρχικό σήμα f(t)ως προς το χρόνο μετατοπισμένο προς τα αριστερά κατα δύο
%χρονικές μονάδες,και επειδή το χρονικό βήμα μετατόπισης t0(t0=2>0)είναι
%θετικό τότε λέμε ότι έχουμε χρονική υστέρηση.
%που το σχεδιάζουμε αφαιρώντας από το χρόνο t 2 χρονικές μονάδες, στην εντολή plot(t-2,f1).

grid

legend ('f(t-2)'),xlabel('t'),legend('f(t-2)'), title('f(t-2)')%Μέσω των εντολών ylabel('text'), xlabel('text'),
%legend('text'), title('text'), εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo γράφημα του σήματος f(t-2).
