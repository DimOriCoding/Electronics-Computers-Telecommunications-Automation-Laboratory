%201500127 Δημήτρης Ορεινός ’σκηση 4.1

clc
clear all

%Αρχικά ορίζουμε το σήμα πληροφορίας m(t),χρησιμοποιώντας τη τεχνική των πολύκλαδων συναρτήσεων,
%όπου ορίζουμε τα κατάλληλα κάθε φορά διανύσματα χρόνου, όλα με σταθερό χρονικό βήμα ts=0,001sec. %
%Το σήμα m(t)ορίζεται ως εξής:m(t)=1 ,για t που ανήκει στο χρονικό διάστημα(ορισμένο ως 
%χρονικό διάνυσμα t1) [0,t0/3],m(t)=-2 ,για t που ανήκει στο χρονικό διάστημα(ορισμένο ως 
%χρονικό διάνυσμα t2) (t0/3,2*t0/3],m(t)=0 ,για t που ανήκει στο χρονικό διάστημα(ορισμένο ως 
%χρονικό διάνυσμα t3) (2*t0/3,t0],
%Ορίζουμε ως σταθερές του προβλήματος τη χρονική σταθερά t0=0,15sec, το 
%χρονικό βήμα(Περίοδος Δειγματοληψίας)ts=0,001sec, τη συχνότητα
%δειγματοληψίας fs=1/ts, το συχνοτικό βήμα df=0,3Hz
%και τη συχνότητα του φορέα fc=250Ηz. 
t0 = 0.15;
ts = 0.001;
fc = 250;


snr=10;
fs=1/ts;
df=0.3;
T=0.002;

snr_lin = 10^(snr/10);


t1=[0:ts:t0/3];

t2=[(t0/3)+ts:ts:2*t0/3];

t3=[(2*t0/3)+ts:ts:t0];


t=[t1 t2 t3];%Ορίζουμε το χρόνο t σαν ένα διάνυσμα χρόνου που έχει προκύψει 
%από σύντμηση των τριών διανυσμάτων χρόνου t1, t2, t3.



m1=ones(1,length(t1));

m2=-2*ones(1,length(t2));

m3=zeros(1,length(t3));

m=[m1 m2 m3];%Κάνουμε σύντημση των διανυσμάτων τιμών του σήματος m(t) για να προκύψει το σήμα πληροφορίας m(t)




c = cos(2*pi*fc.*t);%Επίσης ορίζουμε  και το σήμα του
%φορέα, όπου c(t) =Αc*cos(2*π*fc*t), με Αc=1, το πλάτος του φέροντος κύματος.

u = m.*c;%Eίναι ο ορισμός του διαμορφωμένου κατά DSB σήματος UDSB(t)=m(t)*cos(2*π*fc*t).


figure(1);%Μέσω της εντολής figure ανοίγουμε ένα νέο παράθυρο σχεδίασης που το χωρίζουμε σε τρία μέρη.

subplot(3,1,1);
 

plot(t,m);%Στο πρώτο παράθυρο σχεδιάζουμε τη γραφική παράσταση του σήματος m(t) 
%σε συνάρτηση με το χρόνο t,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε το χρόνο t(το
%διάνυσμα χρόνου t)και σαν εξαρτημένη μεταβλητή y, τις τιμές του 
%του σήματος πληροφορίας m(t) ,για κάθε τιμή του χρόνου t(διάνυσμα χρόνου t).

grid

title('m(t)') , xlabel('t'), ylabel('m(t)'), legend('m(t)')%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo γράφημα  του σήματος πληροφορίας m(t).

subplot(3,1,2);



plot(t,c);%Στο δεύτερο παράθυρο σχεδιάζουμε τη γραφική παράσταση του σήματος φορέα c(t) 
%σε συνάρτηση με το χρόνο t,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε το χρόνο t(το
%διάνυσμα χρόνου t)και σαν εξαρτημένη μεταβλητή y, τις τιμές του 
%του σήματος του φορέα c(t) , για κάθε τιμή του χρόνου t(διάνυσμα χρόνου t).

grid

title('c(t)') , xlabel('t'), ylabel('c(t)'), legend('c(t)')%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo γράφημα  του σήματος  φορέα c(t).


subplot(3,1,3);

plot(t,u);%Στο τρίτο παράθυρο σχεδιάζουμε τη γραφική παράσταση του διαμορφωμένου σήματος διπλής
%πλευρικής ζώνης UDSB(t) 
%σε συνάρτηση με το χρόνο t,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε το χρόνο t(το
%διάνυσμα χρόνου t)και σαν εξαρτημένη μεταβλητή y, τις τιμές του 
%του σήματος uDSB(t) , για κάθε τιμή του χρόνου t(διάνυσμα χρόνου t).

grid


title('uDSB(t)') , xlabel('t'), ylabel('uDSB(t)'), legend('uDSB(t)')%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo γράφημα του  διαμορφωμένου κατά διαμόρφωση
%διπλής πλευρικής ζώνης σήματος uDSB(t).

pause(0);


%Με τη χρήση της βοηθητικής συνάρτησης [M,m,df]=fftseq(m,ts,df) και
%παράλληλα από τον γνωστό ορισμό του μετασχηματισμού Fourier 
%για τα συνεχή σήματα, δηλαδή το ολοκλήρωμα από το 0 εώς το t0(Όλα τα
%σήματα m(t), c(t) και uDSB(t) τα ορίσαμε στο διάστημα [0,t0]) γινομένου του εκάστοτε σήματος με
%τον εκθετικό όρο e^(-j*2*π*f*t).
%υπολογίζουμε αναλυτικά,αλλά και μέσω των παρακάτω γραμμών κώδικα τους μετασχηματισμούς
%Fourier των σημάτων m(t), c(t) και UDSB(t).Τελικά θα προκύψει το ίδιο
%αποτέλεσμα και με τους δύο τρόπους για κάθε σήμα, δηλαδή: 

%M(j*2*π*f)=(t0/3)*e^(-j*π*f*t0/3)*sinc(t0*f/3)-2*(t0/3)*e^(-j*π*f*t0)*sinc(t0*f/3),
%όπου  για t0=0,15sec, θα έχουμε ότι
%Μ(j*2*π*f)=(0,05)*(1-2*e^(-0,1*π*f))*e^(-j*π*0,05*f)*sinc(0,05*f).

%Για συχνότητα φορέα fc=250Hz

%C(j*2*π*f)=0,5*(δ(f+250)+δ(f-250)), δηλαδή το άθροισμα δύο συναρτήσεων δέλτα που
%προσεγγίζονται από στενούς παλμούς,με τη συγκεκριμένη συνάρτηση, να
%"ακουμπάει"(δηλαδή να αρχίσει και να σταματήσει να παίρνει τιμές) τόσο η θετική, όσο και η
%αρνητική συχνοτική συνιστώσα της, στη συχνότητες |f|=200Hz και |f|=300Hz .
%Αυτή η συνάρτηση(θετική και αρνητική συχνοτική συνιστώσα) θα πάρει τη μέγιστη τιμή της 
%που είναι ίση με 0,5, για |fc|=250Hz.

%Ο τύπος UAM(j*2*π*f)=(Ac/2)*[M(f-fc)+M(f+fc)]. έχει αποδειχθεί στην άσκηση 2 της εργασίας)
%UDSB(j*2*π*f)=(0,025)*(1-2*e^(-0,1*π*(f-250)))*e^(-j*π*0,05*(f-250))*sinc(0,05*(f-250))+
%(0,025)*(1-2*e^(-0,1*π*(f+250)))*e^(-j*π*0,05*(f+250))*sinc(0,05*(f+250))).

[M,m,df1]=fftseq(m,ts,df);


M = M/fs;

[U,u,df1] = fftseq(u,ts,df);

U = U/fs;


[C,c,df1] = fftseq(c,ts,df);

C=C/fs;

f = [0:df1:df1*(length(m)-1)]-fs/2;%Ορίζουμε κατάλληλο "κεντραρισμένο διάστημα συχνοτήτων στο 0, ώστε αργότερα 
%να σχεδιάσουμε τα φάσματα των σημάτων m(t),c(t) και uDSB(t)


figure(2);%Μέσω της εντολής figure ανοίγουμε ένα νέο παράθυρο σχεδίασης που το χωρίζουμε σε τρία μέρη.


subplot(3,1,1);

plot(f,abs(fftshift(M)));%Στο πρώτο παράθυρο σχεδιάζουμε τη γραφική παράσταση του σήματος του φορέα
%c(t) σε συνάρτηση με τη συχνότητα f ,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε τη συχνότητα f("κεντραρισμένο" διάνυσμα συχνοτήτων f στο μηδέν)
%και σαν εξαρτημένη μεταβλητή y, τις τιμές του του μέτρου του "κεντραρισμένου" στο μηδέν
%Μετασχηματισμού Fourier FFT  
%του σήματος πληροφορίας m(t) ,για κάθε τιμή της συχνότητας f("κεντραρισμένο"
%διάνυσμα συχνοτήτων f στο μηδέν).


grid

title('M(j*2*π*f)') , xlabel('f'), ylabel('M(j*2*π*f)'), legend('M(j*2*π*f)')
%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo φάσμα του σήματος πληροφορίας m(t).


subplot(3,1,2);

plot(f,abs(fftshift(C)));%Στο δεύτερο παράθυρο σχεδιάζουμε τη γραφική παράσταση του σήματος του φορέα
%c(t) σε συνάρτηση με τη συχνότητα f ,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε τη συχνότητα f("κεντραρισμένο" διάνυσμα συχνοτήτων f στο μηδέν)
%και σαν εξαρτημένη μεταβλητή y, τις τιμές του του μέτρου του "κεντραρισμένου" στο μηδέν
%Μετασχηματισμού Fourier FFT
%του σήματος του φορέα c(t) ,για κάθε τιμή της συχνότητας f("κεντραρισμένο"
%διάνυσμα συχνοτήτων f στο μηδέν).


grid

title('C(j*2*π*f)') , xlabel('f'), ylabel('C(j*2*π*f)'), legend('C(j*2*π*f)')
%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo φάσμα  του σήματος του φορέα c(t).





subplot(3,1,3);


plot(f,abs(fftshift(U)));%Στο τρίτο παράθυρο σχεδιάζουμε τη γραφική παράσταση του διαμορφωμένου σήματος 
%κατά διαμόρφωση διπλής πλευρικής ζώνης(DSB)
%σε συνάρτηση με τη συχνότητα f ,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε τη συχνότητα f("κεντραρισμένο" διάνυσμα συχνοτήτων f στο μηδέν)
%και σαν εξαρτημένη μεταβλητή y, τις τιμές του του μέτρου του "κεντραρισμένου" στο μηδέν
%Μετασχηματισμού Fourier FFT
%του σήματος uDSB(t) ,για κάθε τιμή της συχνότητας f("κεντραρισμένο" διάνυσμα συχνοτήτων f στο μηδέν)


title('UDSB(j*2*π*f)') , xlabel('f'), ylabel('UDSB(j*2*π*f)'), legend('UDSB(j*2*π*f)')
%Με τη χρήση των εντολών ylabel('text')
%,xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo φάσμα του διαμορφωμένου κατά διαμόρφωση διπλής
%πλευρικής ζώνης σήματος uDSB(t).




grid


pause(0);


%Έπειτα υπολογίζουμε θεωρητικά την ισχύ του διαμορφωμένου  σήματος uDSB(t), αν
%θεωρήσουμε ότι το  m(t) είναι περιοδικό με περίοδο Τ=t0.Ισχύει από τη
%θεωρία ότι Pu=Pm/2=0,83, όπου Pm=1,67 η μέση ισχύς του σήματος πληροφορίας
%m(t) που υπολογίζεται από το ολοκλήρωμα της συνάρτησης m(t)^2 στο χρόνο από 0 εώς 2*t0/3,
%διαιρούμενο με τη περίοδο του σήματος που είναι ίση με τη χρονική σταθερά
%t0

%Αν υπολογίσουμε την ίδια ισχύ με τη χρήση της βοηθητικής συνάρτησης που
%ορίσαμε παρακάτω, τότε διαπιστώνουμε πώς προέκυψε σχεδόν η ίδια ισχύς ίση
%με Pu=0,8344 με ελάχιστη απόκλιση από τη θεωρητική τιμή Pu που υπολογίσαμε
%παραπάνω.
signal_power = spower(u(1:length(t)));

%Με βάση την ισχύ  PR=PAM του διαμορφωμένου σήματος στο δέκτη  που υπολογίσαμε πριν, 
%υπολογίζουμε την ισχύ του θορύβουστον δέκτη PN με τη χρήση του λόγου σήματος 
%προς θόρυβο στον δέκτη SNR=log2(PR/PN),όπου τελικά PN=0,083
%και χρησιμοποιούμε τη τιμή της ισχύος του θορύβου που βρήκαμε για να
%λάβουμε τη τετραγωνική της ρίζα και τη πολλαπλασιάζουμε με κάποια τυχαία κατανομή 
%για να δημιουργήσουμε τη συνάρτηση του θορύβου, που θα προστεθεί στην αρχική συνάρτηση 
%του διαμορφωμένου σήματος uDSB(t).Με ελάχιστη απόκλιση θα προκύψει το ίδιο
%αποτέλεσμα PN=0,0834 για το θόρυβο που προστίθεται στο διαμορφωμένο σήμα uDSB(t),αν
%θέσουμε ως ισχύ PR=0,8344, δηλαδή την ισχύ που υπολογίσαμε με τη χρήση της βοηθητικής
%συνάρτησης p=spower(x).


noise_power = signal_power/snr_lin;


noise_std = sqrt(noise_power);


noise = noise_std*randn(1,length(u));


r = u + noise;

[R,r,df1]=fftseq(r,ts,df);%Με τη χρήση της βοηθητικής συνάρτησης [M,m,df]=fftseq(m,ts,df)
%υπολογίζουμε το μετασχηματισμό Fourier του διαμορφωμένου σήματος που
%προκύπτει αν προστεθεί σε αυτό ο θόρυβος που υπολογίσαμε προηγουμένως.

R = R/fs;









figure(3);%Μέσω της εντολής figure ανοίγουμε ένα νέο παράθυρο σχεδίασης που το χωρίζουμε σε δύο μέρη.

subplot(2,1,1);

plot(t,noise(1:length(t)))%Στο πρώτο παράθυρο σχεδιάζουμε τη γραφική παράσταση του σήματος θορύβου  
%σε συνάρτηση με το χρόνο t,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε το χρόνο t(το
%διάνυσμα χρόνου t)και σαν εξαρτημένη μεταβλητή y, τις τιμές του 
%του σήματος θορύβου ,για κάθε τιμή του χρόνου t(διάνυσμα χρόνου t).


title('noise(t)') , xlabel('t'), ylabel('noise(t)'), legend('noise(t)')%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo γράφημα  του σήματος θορύβου.

grid


subplot(2,1,2);

plot(t,r(1:length(t))); %Στο δεύτερο παράθυρο σχεδιάζουμε τη γραφική παράσταση του διαμορφωμένου σήματος 
%κατά διαμόρφωση διπλής πλευρικής ζώνης(DSB) που του 
%έχει προστεθεί θορύβος σε συνάρτηση με το χρόνο t,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε το χρόνο t(το
%διάνυσμα χρόνου t)και σαν εξαρτημένη μεταβλητή y, τις τιμές του 
%του σήματος UDSB(t) που του έχει προστεθεί θορύβος ,για κάθε τιμή του χρόνου t(διάνυσμα χρόνου t).


grid

title('r(t)') , xlabel('t'), ylabel('r(t)'), legend('r(t)')%Με τη χρήση των εντολών ylabel('text')
%, xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo γράφημα  του σήματος r(t) που προκύπτει από το άθροισμα του αρχικού 
%διαμορφωμένου uDSB(t) και του θορύβου που υπολογίσαμε προηγουμένως.



pause(0);


figure(4);%Μέσω της εντολής figure ανοίγουμε ένα νέο παράθυρο σχεδίασης που το χωρίζουμε σε δύο μέρη.


subplot(2,1,1);

plot(f,abs(fftshift(U)));%Στο πρώτο παράθυρο σχεδιάζουμε τη γραφική παράσταση του διαμορφωμένου σήματος 
%κατά διαμόρφωση διπλής πλευρικής ζώνης(DSB)
%σε συνάρτηση με τη συχνότητα f ,
%χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε τη συχνότητα f("κεντραρισμένο" διάνυσμα συχνοτήτων f στο μηδέν)
%και σαν εξαρτημένη μεταβλητή y, τις τιμές του μέτρου του "κεντραρισμένου" στο μηδέν
%Μετασχηματισμού Fourier FFT 
%του σήματος uDSB(t) ,για κάθε τιμή της συχνότητας f("κεντραρισμένο"
%διάνυσμα συχνοτήτων f στο μηδέν).

grid


title('UDSB(j*2*π*f)') , xlabel('f'), ylabel('UDSB(j*2*π*f)'), legend('UDSB(j*2*π*f)')
%Με τη χρήση των εντολών ylabel('text')
%,xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo φάσμα του διαμορφωμένου κατά διαμόρφωση διπλής
%πλευρικής ζώνης σήματος uDSB(t).





subplot(2,1,2);



plot(f,abs(fftshift(R)));
%Στο δεύτερο παράθυρο σχεδιάζουμε τη γραφική παράσταση του σήματος r(t)που προκύπτει από το
%άθροισμα του διαμορφωμένου σήματος 
%κατά διαμόρφωση διπλής πλευρικής ζώνης(DSB) και του σήματος θορύβου που
%υπολογίσαμε σε συνάρτηση με τη συχνότητα f ,χρησιμοποιώντας την εντολή plot(x,y),
%όπου σαν ανεξάρτητη μεταβλητή x,θα θεωρήσουμε τη συχνότητα f("κεντραρισμένο" διάνυσμα συχνοτήτων f στο μηδέν)
%και σαν εξαρτημένη μεταβλητή y, τις τιμές μέτρου του "κεντραρισμένου" στο μηδέν
%Μετασχηματισμού Fourier FFT του σήματος 
%του σήματος UDSB(t) ,για κάθε τιμή της συχνότητας f("κεντραρισμένο"
%διάνυσμα συχνοτήτων f στο μηδέν).


grid

title('R(j*2*π*f)') , xlabel('f'), ylabel('R(j*2*π*f)'), legend('R(j*2*π*f)')
%Με τη χρήση των εντολών ylabel('text')
%,xlabel('text'), legend('text'), title('text'), 
%εισάγουμε κατάλληλους τίτλους αξόνων και γραφήματος, λεζάντα, πλέγμα και
%βαθμολόγηση αξόνων για τo φάσμα του σήματος που αποτελεί άθροισμα του σήματος θορύβου που βρήκαμε
%προηγουμένως και του διαμορφωμένου κατά διαμόρφωση διπλής
%πλευρικής ζώνης σήματος uDSB(t).



pause(0);


%Εδώ δημιουργήσαμε τη βοηθητική συνάρτηση για τον υπολογισμό του
%Μετασχηματισμού Fourier του εκάστοτε συνεχούς σήματος που χρειάζεται.

function[M,m,df]=fftseq(m,ts,df)
fs=1/ts;

if(nargin==2)

    n1 = 0;

else
    
    n1 = fs/df;
end

n2 = length(m);


n = 2^(max(nextpow2(n1),nextpow2(n2)));


M = fft(m,n);


m = [m,zeros(1,n-n2)];


df = fs/n;

end



function p=spower(x)%Εδώ δημιουργήσαμε τη βοηθητική συνάρτηση για τον υπολογισμό της
%ισχύος του εκάστοτε συνεχούς σήματος που χρειάζεται.


p = (norm(x)^2)/length(x);

end
